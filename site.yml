---
- hosts: localhost
  vars:
    # Ireland
    region: "eu-west-1"

    vpc_name: "InstallFest2016VPC"
    lb_name: "InstallFest2016ELB"

    key_name: "{{ ssh_key_name }}"

    vpc_cidr_block: 172.17.0.0/16
    vpc_subnets:
      - cidr: 172.17.0.0/20
        resource_tags: { "Name":"{{ vpc_name }}-1" }
        az: eu-west-1a
      - cidr: 172.17.16.0/20
        resource_tags: { "Name":"{{ vpc_name }}-2" }
        az: eu-west-1b
      - cidr: 172.17.32.0/20
        resource_tags: { "Name":"{{ vpc_name }}-3" }
        az: eu-west-1c
  
    route_tables:
      - subnets:
        - 172.17.0.0/20
        - 172.17.16.0/20
        - 172.17.32.0/20
        routes:
          - dest: 0.0.0.0/0
            gw: igw

    as_group: "InstallFest2016ASGroup"

    asg_subnets:
      - "{{ vpc.subnets[0].id }}"
      - "{{ vpc.subnets[1].id }}"
      - "{{ vpc.subnets[2].id }}"

    availability_zones:
      - "{{ vpc.subnets[0].az }}"
      - "{{ vpc.subnets[1].az }}"
      - "{{ vpc.subnets[2].az }}"

    lc_security_groups:
      - "{{ ssh_access_group.group_id }}"
      - "{{ app_security_group.group_id }}"
      - "{{ mysql_security_group.group_id }}"

    load_balancers:
      - "{{ lb_name }}"

#    image_id: "ami-f981318a"
  roles:
    # Creates VPC, ELB, RDS
    - { role: aws_infrastructure, tags: ['infrastructure'] }
    # Creates an autoxscaling group with cloudformation
    - aws_autoscalegroup_cloudformation

- hosts: localhost
  tags: 
    - utility
    - utility_server
  vars:
    # TODO: Add and VPC id (should be more elegant in getting from VPC creation, but I didn`t have time for it, sorry).
    vpc_id: 'vpc-7c3d3f19'
    # CentOS 7 region eu-west
    ami_id: "ami-7abd0209"

    region: "eu-west-1"
  tasks:
    - name: Ensure security group for utility server is available
      tags: security_groups
      ec2_group:
        name: utility_access
        description: Access for utility servers
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
      register: utility_security_group

    - name: Ensure utility server is available (in default vpc)
      ec2:
        key_name: "{{ ssh_key_name }}"
        group: utility_access
        instance_type: t2.micro
        image: "{{ ami_id }}"
        wait: yes
        wait_timeout: 500
        count_tag:
          type: installfest2016_utility
        exact_count: 1
        region: eu-west-1
        instance_tags:
         type: installfest2016_utility
         project:installfest2016
         policy: normal
        vpc_subnet_id: subnet-d58db88c
        assign_public_ip: yes
      register: utility_server

    - debug: var=utility_server

    - name: Add the instances we created (by public IP) to the group 'utility_server'
      add_host:
        hostname: "{{ item.dns_name }}"
        ansible_host: "{{ item.public_ip }}"
        groups: tag_type_installfest2016_utility
      with_items: utility_server.instances

    - name: Wait until ssh is available
      local_action: wait_for port=22 host={{ item.public_ip }} search_regex=OpenSSH delay=10
      with_items: utility_server.instances

- hosts: tag_type_installfest2016_utility
  become: yes
  tags:
    - utility
    - utility_server
  pre_tasks:
    # ansible master config
    - name: Ensure ansible group is available
      group: name=ansible state=present
  roles:
    - { role: davidkarban.bootstrap, become: yes }
    - { role: davidkarban.common, become: yes }
    - { role: davidkarban.apache2, become: yes }
    - { role: davidkarban.apache2_vhost, become: yes }
    - { role: davidkarban.php-fpm, become: yes }
    - { role: davidkarban.git, become: yes }
  tasks: 
    - name: Install phpmyadmin application
      package: name={{ item }} state=present
      with_items: 
        - phpmyadmin

    - name: Remove default '/phpmyadmin' access and setup directory
      file: path={{ item }} state=absent
      with_items:
        - '/etc/httpd/conf.d/phpMyAdmin.conf'
        - '/usr/share/phpMyAdmin/setup'
      notify: reload apache2

    # selinux included! No more setenforce 0.
    - name: set privileges on ansible directory
      file: path=/etc/ansible state=directory 
        owner=centos group=ansible mode=2775
        serole='object_r' setype='etc_t' seuser='system_u'


